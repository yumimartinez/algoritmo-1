#include <iostream>
#include <conio.h>
#include <string.h>
#include <stdio.h>

//ESTRUCTURAS

struct producto
{
	int IdProd;
	char nombre[30];
	int stock;
	float precio;
	char estado;
};

struct cliente 
{
	int IdCliente;
	char nombre[30];
	char NIT;
	char email[30];
	char estado;
};

struct vendedor
{
	int IdVendedor;
	char nombre[30];
	char telefono[15];
	char email[30];
	char estado;
};

struct automovil
{
	int IdAuto;
	char placa[12];
	int IdCliente;
	char estado;
};

struct bomba
{
	int IdBomba;
	char descripcion[12];
	int IdProd;
	int IdVenta;
	char estado;
};

struct compra
{
	int IdCompra;
	char fecha[10];
	int cantidad;
	int IdProd;
	char estado;
};

struct venta
{
	int IdVenta;
	char fecha[10];
	int cantidad;
	float precioUnitario;
	int IdBomba;
	int IdAuto;
	char estado;
};

using namespace std;

//ARCHIVOS
void archivo_producto (char nomArchivo[])
{
	FILE*ptr;
	ptr=fopen("producto.dat", "ab");
	fclose(ptr);
}

void archivo_cliente (char nomArchivo[])
{
	FILE*ptr;
	ptr=fopen("cliente.dat", "ab");
	fclose (ptr);
}

void archivo_vendedor (char nomArchivo[])
{
	FILE*ptr;
	ptr=fopen("vendedor.dat", "ab");
	fclose (ptr);
}

void archivo_automovil (char nomArchivo[])
{
	FILE*ptr;
	ptr=fopen("automovil.dat", "ab");
	fclose (ptr);
}

void archivo_bomba (char nomArchivo[])
{
	FILE*ptr;
	ptr=fopen("bomba.dat", "ab");
	fclose (ptr);
}

void archivo_compra (char nomArchivo[])
{
	FILE*ptr;
	ptr=fopen("compra.dat","ab");
	fclose (ptr);
}

void archivo_venta  (char nomArchivo[])
{
	FILE*ptr;
	ptr=fopen("venta.dat", "ab");
	fclose (ptr);
}

// AÃ‘ADIR

void producto_datos ()
{	
	
	FILE*ptr;
	producto prod;
	do{
	cout << "ID producto: ";
	cin >> prod.IdProd;
	}while(prod.IdProd<4);
	cout << "Producto: ";
	do
	{
	gets (prod.nombre);
	}while(strlen(prod.nombre)==0);
	
	do{
	cout << "Precio: ";
	cin >> prod.precio;
	}while(prod.precio<=0);
	prod.estado = 'A';

	ptr=fopen("producto.dat","ab");
	fwrite (&prod,sizeof(prod),1,ptr);
	fclose (ptr);
}

void cliente_datos()
{
	FILE*ptr;
	cliente client;
	cout << endl;
	do
	{
	cout << "ID cliente: ";
	cin >> client.IdCliente;
	}while (client.IdCliente<0);
	cout << "Nombre: ";
	do
	{
	gets (client.nombre);
	} while (strlen(client.nombre)==0);
	cout << "E-mail: ";
	cin >> client.email;
	client.estado='A';

	ptr=fopen("cliente.dat","ab");
	fwrite (&client,sizeof(client),1,ptr);
	fclose (ptr);
}

void vendedor_datos()
{
	FILE*ptr;
	vendedor vend;
	cout << endl;
	do
	{
	cout << "ID vendedor: ";
	cin >> vend.IdVendedor;
	}while (vend.IdVendedor<0);
	cout << "Nombre: ";
	do
	{
	gets (vend.nombre);
	}while(strlen(vend.nombre)==0);
	cout << "Telefono: ";
	cin >> vend.telefono;
	cout << "E-mail: ";
	cin >> vend.email;
	vend.estado='A';
	ptr=fopen("vendedor.dat", "ab");
	fwrite (&vend, sizeof(vend),1,ptr);
	fclose (ptr);
}

void automovil_datos()
{
	FILE*ptr;
	automovil autom;
	cout << endl;
	do
	{
	cout << "ID automovil: ";
	cin >> autom.IdAuto;
	}while(autom.IdAuto<0);
	cout << "Placa: ";
	cin >> autom.placa;
	do
	{
	cout << "ID cliente: ";
	cin >> autom.IdCliente;
	}while(autom.placa<0);
	autom.estado='A';
	ptr=fopen("automovil.dat","ab");
	fwrite(&autom,sizeof(autom),1,ptr);
	fclose (ptr);
}


void bomba_datos ()
{
	FILE*ptr;
	bomba bom;
	do
	{
	cout <<"ID bomba: ";
	cin >> bom.IdBomba;
	}while(bom.IdBomba<0);
	cout << "Descripcion: ";
	cin >> bom.descripcion;
	do
	{
	cout << "ID producto: ";
	cin >> bom.IdProd;
	}while (bom.IdProd<0);
	do
	{
	cout << "ID venta: ";
	cin >> bom.IdVenta;
	}while (bom.IdVenta<0);
	bom.estado ='A';
	ptr=fopen("bomba.dat","ab");
	fwrite(&bom,sizeof(bom),1,ptr);
	fclose (ptr);
}

void compra_datos()
{
	FILE*ptr;
	compra comp;
	cout << endl;
	do
	{
	cout << "ID compra: ";
	cin >> comp.IdCompra;
	}while (comp.IdCompra<0);
	//COMPLICADO!!!!!!!!
	cout << "Fecha: ";
	cin >> comp.fecha;
	do
	{
	cout << "Cantidad: ";
	cin >> comp.cantidad;
	}while (comp.cantidad<0);
	cout << "ID prod: ";
	cin >> comp.IdProd;
	comp.IdProd='A';
	ptr=fopen("compra.dat","ab");
	fwrite(&comp,sizeof(comp),1,ptr);
	fclose (ptr);
}

void venta_datos()
{
	FILE*ptr;
	venta ven;
	cout << endl;
	do
	{
	cout << "ID venta: ";
	cin >> ven.IdVenta;
	}while(ven.IdVenta<0);
	cout << "Fecha: ";
	cin >> ven.fecha;
	do
	{
	cout << "Cantidad: ";
	cin >> ven.cantidad;
	}while (ven.cantidad<0);
	do
	{
	cout << "Precio unitario: ";
	cin >> ven.precioUnitario;
	}while (ven.precioUnitario<0);
	do
	{
	cout << "ID bomba: ";
	cin >> ven.IdBomba;
	}while (ven.IdBomba<0);
	do
	{
	cout << "Id auto: ";
	cin >> ven.IdAuto;
	}while (ven.IdAuto<0);
	ven.estado='A';
	ptr= fopen("venta.dat","ab");
	fwrite (&ven,sizeof(ven),1,ptr);
	fclose (ptr);
}

// BORRAR

void producto_borrar ()
{
	FILE *ptr;
	int pro,k=0;
	producto prod;
	do
	{
		cout << "Ingrese el ID del producto que desea eliminar: ";
		cin >> pro;
		
		ptr=fopen("producto.dat","r+b");
		if(ptr!=NULL)
		{
			while (feof(ptr)==false)
			{
				fread (&prod,sizeof(prod),1,ptr);
				if (prod.IdProd==pro)
				{
					prod.estado='E';
					fwrite(&prod,sizeof(prod),1,ptr);
					k=1;
				}
			}
		}
	fclose (ptr);
	if(k==0)
	{
		cout << "El ID del producto no existe ";
	}
	}while (k==0);
}

void cliente_borrar ()
{
	FILE*ptr;
	int cli,k=0;
	cliente clie;
	do
	{
		cout << "Ingrese el ID del cliente: ";
		cin >> cli;
		ptr=fopen("cliente.dat","r+b");
		if (ptr!=NULL)
		{
			while (feof(ptr)==false)
			{
				fread (&clie, sizeof(clie), 1,ptr);

					if (clie.IdCliente==cli)
					{
						clie.estado='E';
						fwrite(&clie,sizeof(clie),1,ptr);
						k=1;
					}
				}
			}

		fclose (ptr);
		if (k==0)
		{
			cout << "El ID del cliente no existe ";
		}
	}while (k==0);
}

void vendedor_borrar()
{
	FILE*ptr;
	int ven,k=0;
	vendedor vend;
	do
	{
		cout << "Ingrese el ID del vendedor: ";
		cin >> ven;
		if (ptr!=0)
		{
			while (feof(ptr)==false)
			{
				fread (&vend,sizeof(vend),1,ptr);
				if (vend.IdVendedor==ven)
				{
					vend.estado='E';
					fwrite (&vend,sizeof(vend),1,ptr);
					k=1;
				}
			}
		}
		fclose(ptr);
		if(k==0)
		{
			cout << "El ID del vendedor no existe ";
		}
	}while (k==0);
}

void automovil_borrar ()
{
	FILE*ptr;
	int aut,k=0;
	automovil autom;
	do
	{
		cout << "Ingrese el ID del automovil: ";
		cin >> aut;
		ptr=fopen("automovil.dat","r+b");
		if(ptr!=NULL)
		{
			while (feof(ptr)==false)
			{
				fread(&autom, sizeof(autom),1,ptr);
				if (autom.IdAuto == aut)
				{
					autom.estado='E';
					fwrite (&autom,sizeof(autom),1,ptr);
					k=1;
				}
			}
		}
		fclose(ptr);
		if(k=0)
		{
			cout << "El ID del automovil no existe ";
		}
	} while (k==0);
}

void bomba_borrar()
{
	FILE*ptr;
	int bo,k=0;
	bomba bom;
	do
	{
		cout << "Ingrese el ID de la bomba: ";
		cin >> bo;
		ptr=fopen("bomba.dat","r+b");
		if (ptr!=NULL)
		{
			while(feof(ptr)==false)
			{
				fread(&bom,sizeof(bom),1,ptr);
				if (bom.IdBomba==bo)
				{
					bom.estado='E';
					fwrite(&bom,sizeof(bom),1,ptr);
					k=1;
				}
			}
		}
		fclose(ptr);
		if(k==0)
		{
			cout << "El ID de la bomba no existe ";
		}
	} while (k==0);
}

void compra_borrar ()
{
	FILE*ptr;
	int com, k=0;
	compra comp;
	do
	{
		cout << "Ingrese el ID de la compra: ";
		cin >> com;
		if (ptr!=0)
		{
			while (feof(ptr)==false)
			{
				fread(&comp,sizeof(comp),1,ptr);
				if (comp.IdCompra==com)
				{
					comp.estado='E';
					fwrite(&comp,sizeof(comp),1,ptr);
					k=1;
				}
			}
		}
		fclose (ptr);
		if(k==0)
		{
			cout << "El ID de la compra no existe ";
		}
	}while (k==0);
}

void venta_borrar()
{
	FILE*ptr;
	int ven, k=0;
	venta vent;

	do{
		cout << "Ingrese el ID de venta que desea eliminar: ";
		cin >> ven;
		ptr= fopen ("venta.dat","r+b");
		if(ptr!=NULL)
		{
			while (feof(ptr)==false)
			{
				fread(&vent,sizeof(vent),1,ptr);
				if (vent.IdVenta)
				{
					vent.estado='E';
					fwrite(&vent,sizeof(vent),1,ptr);
					k=1;
				}
			}
		}
		fclose(ptr);
		if(k==0)
		{
			cout << "El ID de la venta no esxiste ";
		}
	}while(k==0);
}


void main()
{
	int opcion;
	do
	{
	cout << endl;
	cout << endl;
	cout << endl;
	cout << endl;
	cin >> opcion;

		switch (opcion)
		{
			case 1:
				archivo_producto ("producto");
				producto_datos();
				archivo_cliente ("cliente");
				cliente_datos();
				archivo_vendedor ("vendedor");
				vendedor_datos();
				archivo_automovil ("automovil");
				automovil_datos();
				archivo_bomba ("bomba");
				bomba_datos();
				archivo_compra ("compra");
				compra_datos();
				archivo_venta ("venta");
				venta_datos();



		}
	}while ((opcion!=0)&&(isdigit(opcion=0)));
	
getch();
}
